{"version":3,"file":"static/js/54.26f9d3e3.chunk.js","mappings":"gQA4IA,UArIA,WACG,OAAqCA,EAAAA,EAAAA,UAAS,IAA9C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA6CF,EAAAA,EAAAA,UAAS,IAAtD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,CAACK,OAAM,EAAMC,WAAW,KAAvE,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCR,EAAAA,EAAAA,UAAS,CAACK,OAAM,EAAMC,WAAW,KAAvE,eAAOG,EAAP,KAAoBC,EAApB,KAgCD,OACE,UAAC,IAAD,CACAC,GAAI,CAEFC,MAAO,QACPC,OAAO,OACPC,OAAQ,QAEPC,UAAW,QACZC,WAAY,UACZC,UAAW,yEACXC,aAAc,MACdC,QAAS,YACTC,IAAK,QAZP,WAkBC,SAAC,IAAD,CAAYC,UAAU,KAAKC,QAAQ,KACpCX,GAAI,CACFC,MAAO,QACPE,OAAQ,OACRS,WAAY,cACZC,UAAW,SACXC,WAAY,IACZC,SAAU,OACVC,WAAY,OACZC,MAAO,UAIPC,UAAW,SACXC,eAAgB,SAChBjB,OAAQ,QAfT,sCAmBD,mBAEA,SAAC,IAAD,WAEA,SAAC,IAAD,CAAKQ,UAAU,OACfV,GAAI,CAAEoB,GAAI,GADV,UAIE,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAGtB,GAAI,CAAEkB,UAAW,UAA7C,WACA,SAAC,KAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACAC,KAAK,WACHC,GAAG,oBACHC,MAAM,eACNC,MAAOtC,EACRI,MAAOE,EAAaF,MACpBC,WAAYC,EAAaD,WACxBkC,SAAU,SAACC,GAAD,OArFQ,SAACA,GACzBvC,EAAeuC,EAAEC,OAAOH,OACF,KAAnBE,EAAEC,OAAOH,OACR/B,EAAgB,CAACH,OAAM,EAAMC,WAAW,8BAkFjBqC,CAAkBF,IACvCG,WAAS,OAGd,SAAC,KAAD,CAAMV,MAAI,EAACC,GAAI,GAAf,UACG,SAAC,IAAD,CACEC,KAAK,WACLC,GAAG,oBACHC,MAAM,uBACNjC,MAAOI,EAAaJ,MACpBC,WAAYG,EAAaH,WACzBkC,SAAU,SAACC,GAAD,OAzFM,SAACA,GACvBrC,EAAmBqC,EAAEC,OAAOH,OACN,KAAnBE,EAAEC,OAAOH,MAER7B,EAAgB,CAACL,OAAM,EAAKC,WAAW,yBAEpCmC,EAAEC,OAAOH,QAAUtC,EAClBS,EAAgB,CAACL,OAAM,EAAMC,WAAW,0BAExCI,EAAgB,CAACL,OAAM,EAAOC,WAAW,KAgFxBuC,CAAkBJ,IACrCG,WAAS,OAGb,SAAC,KAAD,CAAMV,MAAI,EAACC,GAAI,GAAf,UACA,SAAC,IAAD,CACCS,WAAS,EACRtB,QAAQ,YACRX,GAAI,CAAEoB,GAAI,EAAGe,GAAI,EAAGC,gBAAgB,UAAUnC,MAAO,QACrDE,OAAQ,OAAOW,WAAW,IAAIC,SAAS,QAEvCsB,QAAS,kBArFS,WAClB,IAAIC,EAAI,CACPC,SAAS/C,IAEVgD,EAAAA,EAAAA,IAAK,mDAAD,OAAoDC,KAAKC,MAAMC,aAAaC,QAAQ,oBAA6BN,GAAKO,MAAK,SAACC,GAC5HC,QAAQC,IAAIF,MAgFFG,IANhB,+BAaA,SAAC,KAAD,CAAM1B,MAAI,EAACC,GAAI,GAAf,UACE,cAAG0B,MAAO,CAACjC,MAAO,WAAYoB,QAAS,WAAKc,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,OAAcC,OAAOC,SAASC,UAAvF","sources":["pages/auth/resetpassword/resetpassword.tsx"],"sourcesContent":["import { Box, Button, Card, CardContent, Grid, IconButton, TextField, Typography } from '@mui/material'\nimport React,{useState} from 'react'\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {post} from '../../../utils/http/httpMethods'\nimport {paths} from '../../../routes/routes.config';\nimport history from \"../../../routes/history\";\n \nfunction Resetpassword() {\n   const [newpassword,setNewPassword] = useState(\"\");\n   const [confirmPassword,setConfirmPassword] = useState(\"\");\n   const [newPassError,setNewPassError] =useState({error:false,helperText:\"\"})\n   const [confirmError,setConfirmError] =useState({error:false,helperText:\"\"})\n   \n   const handleNewPassword =(e:any) => {\n    setNewPassword(e.target.value);\n    if(e.target.value === \"\"){\n        setNewPassError({error:true, helperText:\" New password is required\"})\n       }\n}\n\nconst handleConfirmPass = (e:any) => {\n    setConfirmPassword(e.target.value);\n    if(e.target.value === \"\")\n    {\n        setConfirmError({error:true,helperText:\"password is required\"})\n    }else{\n        if(e.target.value !== newpassword){\n            setConfirmError({error:true, helperText:\"password should match\"})\n        }else{\n            setConfirmError({error:false, helperText:\"\"})\n        }\n    }\n}\n \n\n    const resetPassword = () =>{\n        let obj={\n         password:confirmPassword,\n     }\n        post(`http://localhost:8080/auth/reset-password?token=${JSON.parse(localStorage.getItem(\"resetPassToken\") as any)}`, obj).then((response) =>{\n            console.log(response)\n        })\n    }\n  return (\n    <Card\n    sx={{\n      // position: \"absolute\",\n      width: \"512px\",\n      margin:\"auto\",\n      height: \"412px\",\n      // left: \"464px\",\n       marginTop: \"150px\",\n      background: \"#FFFFFF\",\n      boxShadow: \"-1px -1px 4px rgba(33, 43, 54, 0.1), 2px 2px 4px rgba(33, 43, 54, 0.2)\",\n      borderRadius: \"8px\",\n      padding: \"32px 16px\",\n      gap: \"36px\"\n    }}\n  >\n   \n       \n    \n     <Typography component=\"h1\" variant=\"h5\" \n    sx={{\n      width: \"345px\",\n      height: \"36px\",\n      fontFamily: 'Public Sans',\n      fontStyle: \"normal\",\n      fontWeight: 700,\n      fontSize: \"25px\",\n      lineHeight: '36px',\n      color: \"#212B36\",\n      // flex: \"none\",\n      // order: 0,\n      // flexGrow: 0,\n      textAlign: \"center\",\n      justifyContent: \"center\",\n      margin: \"auto\"\n     }}>\n      Set  your new  password\n    </Typography>\n    <br />\n\n    <CardContent>\n   \n    <Box component=\"form\"\n    sx={{ mt: 1 }}>\n\n     \n      <Grid container spacing={4} sx={{ textAlign: \"center\" }}>\n      <Grid item xs={12}>\n        <TextField\n        type=\"password\"\n          id=\"outlined-required\"\n          label=\"New Password\"\n          value={newpassword}\n         error={newPassError.error}\n         helperText={newPassError.helperText}\n          onChange={(e:any) => handleNewPassword(e)}\n          fullWidth\n        />\n      </Grid>\n     <Grid item xs={12}>\n        <TextField\n          type=\"password\"\n          id=\"outlined-required\"\n          label=\"Confirm new Password\"\n          error={confirmError.error}\n          helperText={confirmError.helperText}\n          onChange={(e:any)=>handleConfirmPass(e)}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12}>\n      <Button\n       fullWidth\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 ,backgroundColor:\"#1890FF\",width: \"450px\",\n        height: \"48px\",fontWeight:700,fontSize:\"16px\"}}\n        // loading={isButtonDisabled}\n        onClick={()=> resetPassword()}\n      >\n        Reset Password\n      </Button>\n       </Grid>\n     \n      \n      <Grid item xs={12}>\n        <a style={{color: '#1890FF'}} onClick={()=>{history.push(paths.login); window.location.reload()}}>Back</a>\n        \n      </Grid>\n    </Grid>\n     \n\n    </Box>\n    </CardContent>\n  </Card>\n  )\n}\n\nexport default Resetpassword"],"names":["useState","newpassword","setNewPassword","confirmPassword","setConfirmPassword","error","helperText","newPassError","setNewPassError","confirmError","setConfirmError","sx","width","margin","height","marginTop","background","boxShadow","borderRadius","padding","gap","component","variant","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","textAlign","justifyContent","mt","container","spacing","item","xs","type","id","label","value","onChange","e","target","handleNewPassword","fullWidth","handleConfirmPass","mb","backgroundColor","onClick","obj","password","post","JSON","parse","localStorage","getItem","then","response","console","log","resetPassword","style","history","paths","window","location","reload"],"sourceRoot":""}