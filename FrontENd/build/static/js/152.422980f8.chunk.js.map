{"version":3,"file":"static/js/152.422980f8.chunk.js","mappings":"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","sources":["pages/auth/signup/signup.tsx"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button, Card, CardContent, Container, Grid, IconButton, InputAdornment, Modal, Paper, TextField, Typography } from '@mui/material'\nimport { get, post, put } from \"../../../utils/http/httpMethods\";\nimport React,{useState} from 'react'\nimport { authenticationService } from \"../../../utils/auth.service\";\nimport { VisibilityOff, VisibilityOffOutlined } from '@mui/icons-material';\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport history from \"../../../routes/history\";\nimport {paths} from '../../../routes/routes.config'\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\n \nexport default function Signup () {\n  const [firstName,setFirstName] = useState(\"\");\n  const [lastName,setLastName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\n  const {handleSubmit, register, formState:{ errors}} = useForm()\n  const [showPassword,setShowPassword] = useState(true);\n\n  const doSignup = (formData: any) => {\n    console.log(formData);\n    let obj= {\n      firstName:firstName,\n      lastName:lastName,\n      email:email,\n      password:password\n    }\n    setButtonDisabled(true);\n    authenticationService\n      .register(obj)\n      .then((response: any) => {\n        localStorage.setItem('signupToken', JSON.stringify(response.token));\n        console.log(response.token)\n        // setOpenModal(true);\n        //open modal and write it in that onsubmit\n        setButtonDisabled(true);\n      })\n      .catch((error) => {\n        setButtonDisabled(false);\n      });\n      return obj;\n  };\n  \n  const handleVerification = (email:any) =>{\n   \n      let token= JSON.parse(localStorage.getItem(\"signupToken\") as any)\n      let obj={\n        email:email,\n         token: token\n      }\n      \n    post('http://localhost:8080/auth/send-verification-email',obj).then((response: any) => {\n          console.log(response)\n        })\n  }\n \n  return (\n\n    \n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <Card\n      sx={{\n        // position: \"absolute\",\n        width: \"542px\",\n        // margin:\"auto\",\n        minHeight: \"440px\",\n\n        // left: \"464px\",\n         marginTop: \"150px\",\n        background: \"#FFFFFF\",\n        boxShadow: \"-1px -1px 4px rgba(33, 43, 54, 0.1), 2px 2px 4px rgba(33, 43, 54, 0.2)\",\n        borderRadius: \"8px\",\n        padding: \"32px 16px\",\n        gap: \"32px\"\n      }}\n    >\n     \n      <Typography component=\"h1\" variant=\"h5\" \n      sx={{\n        width: \"245px\",\n        height: \"36px\",\n        fontFamily: 'Public Sans',\n        fontStyle: \"normal\",\n        fontWeight: 700,\n        fontSize: \"25px\",\n        lineHeight: '36px',\n        color: \"#212B36\",\n        // flex: \"none\",\n        // order: 0,\n        // flexGrow: 0,\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        margin: \"auto\"\n       }}>\n        Sign up to Social Feed\n      </Typography>\n      <CardContent>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(doSignup)}\n        noValidate\n      \n      >\n         <Grid container spacing={1} sx={{ textAlign: \"center\" }}>\n        \n        <TextField\n          margin=\"normal\"\n          required\n          // fullWidth\n          value={firstName}\n          {...register(\"firstName\",{ \n             required:\"First name is required\",\n          })}\n          // defaultValue=\"navanath@angularminds.com\"\n          id=\"firstname\"\n          label=\"First Name\"\n          name=\"firstName\"\n          onChange={(e)=> {setFirstName(e.target.value); errors.firstName=false;}}\n          error={Boolean(errors.firstName)}\n          helperText={errors.firstName?.message}\n          \n        />\n       \n    \n        <TextField\n          margin=\"normal\"\n          sx={{ml:\"15px\"}}\n          required\n          // fullWidth\n          value={lastName}\n          // defaultValue=\"navanath@angularminds.com\"\n          {...register(\"lastName\",{\n            required:\"lastName is required\"\n          })}\n          id=\"lastname\"\n          label=\"Last Name\"\n          name=\"lastName\"\n          onChange={(e)=> {setLastName(e.target.value);errors.lastName=false}}\n          error={Boolean(errors.lastName)}\n          helperText={errors.lastName?.message}\n          \n        />\n        \n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          value={email}\n          {...register(\"email\" as any,{\n            required:\"email is required\", \n            pattern:{\n              value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n              message:\"invalid email address\"\n            }\n          })}\n          // defaultValue=\"navanath@angularminds.com\"\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          onChange={(e)=> {setEmail(e.target.value);errors.email=false}}\n          error={Boolean(errors.email)}\n          helperText={errors.email?.message}\n          \n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          value={password}\n          {...register(\"password\" as any,{\n            required:\"password is required\"\n          })}\n          name=\"password\"\n          label=\"Password\"\n          onChange={(e) => {setPassword(e.target.value);errors.password = false}}\n          type={showPassword ? \"password\" : \"text\"}\n          id=\"password\"\n          error={Boolean(errors.password)}\n          helperText={errors.password?.message}\n          autoComplete=\"current-password\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                   onClick={() => setShowPassword(!showPassword)}\n                  // onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                   {showPassword ? <RemoveRedEyeIcon /> :  <RemoveRedEyeIcon />} \n                </IconButton>\n              </InputAdornment>)\n          }}\n        />\n       \n        <LoadingButton\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 ,backgroundColor:\"#1890FF\",\n          height: \"48px\",fontWeight:700,fontSize:\"16px\"}}\n          loading={isButtonDisabled}\n        >\n          Sign Up\n        </LoadingButton>\n      \n        <br />\n          <Grid container>\n          <Grid item className=\"text-primary\" style={{color:'#637381'}}>\n         Already having an account?<a style={{color: '#1890FF'}} onClick={()=>{history.push(paths.login);window.location.reload()}}> Sign in</a> \n          </Grid> \n         </Grid>\n         <br/>\n        \n\n\n      \n        </Grid>\n      </Box>\n      </CardContent>\n    </Card>\n  </Container>\n  )\n}\n\n"],"names":["Signup","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","isButtonDisabled","setButtonDisabled","useForm","handleSubmit","register","errors","formState","showPassword","setShowPassword","component","maxWidth","sx","width","minHeight","marginTop","background","boxShadow","borderRadius","padding","gap","variant","height","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","textAlign","justifyContent","margin","onSubmit","formData","console","log","obj","authenticationService","then","response","localStorage","setItem","JSON","stringify","token","catch","error","noValidate","container","spacing","required","value","id","label","name","onChange","e","target","Boolean","helperText","message","ml","fullWidth","pattern","autoComplete","type","InputProps","endAdornment","position","onClick","edge","mt","mb","backgroundColor","loading","item","className","style","history","paths","window","location","reload"],"sourceRoot":""}